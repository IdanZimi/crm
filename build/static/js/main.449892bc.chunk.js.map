{"version":3,"sources":["components/update.js","components/AddClient.js","components/actions.js","components/analytics.js","components/popUp.js","components/printClient.js","components/Header.js","components/clients.js","App.js","serviceWorker.js","index.js"],"names":["Update","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","declare","clientname","state","props","clients","sold","alert","declareSale","send","emailType","changeEmail","transfer","ownername","inputchange","e","inputvalue","target","value","setState","defineProperty","name","console","log","react_default","a","createElement","id","className","list","onChange","placeholder","map","c","type","onClick","Component","AddClient","addNewClient","firstName","surName","country","owner","_React$createElement","actions","NewClient","email","firstContact","axios","post","then","res","clientToUpdate","toConsumableArray","find","_this2","get","response","data","update","components_AddClient","analytics","Popup","srname","togglePopup","changeInput","inputValue","client","split","PrintClient","showPopup","checksold","alt","src","checkemail","popUp","HeaderClients","Clients","searchChange","_id","index","indexOf","search","_this3","Header","includes","printClient","key","App","BrowserRouter","Link","to","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qXA8FeA,cA1FX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAQJI,QAAQ,WACJ,IAAIC,EAAaR,EAAKS,MAAMD,YACG,IAA5BR,EAAKU,MAAMC,QAAQC,KAClBC,MAAM,gBAENb,EAAKU,MAAMI,YAAYN,IAdjBR,EAkBde,KAAO,WACH,IAAIP,EAAaR,EAAKS,MAAMD,WACxBQ,EAAYhB,EAAKS,MAAMO,UAC3BhB,EAAKU,MAAMO,YAAYT,EAAaQ,IArB1BhB,EAuBdkB,SAAW,WACP,IAAIV,EAAaR,EAAKS,MAAMD,WACxBW,EAAYnB,EAAKS,MAAMU,UAC3BnB,EAAKU,MAAMQ,SAASV,EAAYW,IA1BtBnB,EA8BdoB,YAAc,SAACC,GACX,IAAIC,EAAaD,EAAEE,OAAOC,MAC1BxB,EAAKyB,SAALxB,OAAAyB,EAAA,EAAAzB,CAAA,GAAgBoB,EAAEE,OAAOI,KAAOL,IAEhCM,QAAQC,IAAIP,IAhCZtB,EAAKS,MAAQ,CACTD,WAAY,GACZW,UAAW,GACXH,UAAW,IALLhB,wEAuCV,IAAIW,EAAUR,KAAKO,MAAMC,QAEzB,OACImB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,GAAG,UAAN,UACAH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAb,UACEJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,UAAUR,KAAK,aAAaO,UAAU,QAAQV,MAAOrB,KAAKM,MAAMD,WAAY4B,SAAUjC,KAAKiB,YAAaiB,YAAY,iBAC9HP,EAAAC,EAAAC,cAAA,YAAUC,GAAG,WACRtB,EAAQ2B,IAAI,SAAAC,GACT,OAAOT,EAAAC,EAAAC,cAAA,UAAQR,MAAOe,EAAEZ,MAAOY,EAAEZ,WAMjDG,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAb,wBACCJ,EAAAC,EAAAC,cAAA,UAAQC,GAAG,cAAcO,KAAK,OAAOb,KAAK,YAAYU,YAAY,QAAQD,SAAUjC,KAAKiB,aAClFU,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQR,MAAM,gBAAd,gBACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,mBAAd,mBACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,cAAd,cACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,eAAd,eACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,iBAAd,iBACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,kBAAd,kBACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,kBAAd,mBAEJM,EAAAC,EAAAC,cAAA,QAAMS,QAAStC,KAAKe,SAAUe,GAAG,gBAAjC,aAEJH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAb,cACCJ,EAAAC,EAAAC,cAAA,UAAQC,GAAG,cAAcO,KAAK,OAAOb,KAAK,YAAYU,YAAY,aAAaD,SAAUjC,KAAKiB,aACvFU,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAAA,QAAMC,GAAG,YAAYQ,QAAStC,KAAKY,MAAnC,SAEJe,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAb,gBACAJ,EAAAC,EAAAC,cAAA,QAAMC,GAAG,cAAcQ,QAAStC,KAAKI,SAArC,YAEAuB,EAAAC,EAAAC,cAAA,mBAlFKU,aCwDNC,cAvDX,SAAAA,IAAc,IAAA3C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACV3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,QAQJyC,aAAe,WACX,IAAIC,EAAY7C,EAAKS,MAAMoC,UACvBC,EAAU9C,EAAKS,MAAMqC,QACrBC,EAAU/C,EAAKS,MAAMsC,QACrBC,EAAQhD,EAAKS,MAAMuC,MACvBhD,EAAKU,MAAMkC,aAAaC,EAAYC,EAAUC,EAAUC,IAd9ChD,EAgBdoB,YAAc,SAACC,GACX,IAAIC,EAAaD,EAAEE,OAAOC,MAC1BxB,EAAKyB,SAALxB,OAAAyB,EAAA,EAAAzB,CAAA,GAAgBoB,EAAEE,OAAOI,KAAOL,IAEhCM,QAAQC,IAAIP,IAlBZtB,EAAKS,MAAQ,CACToC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,MAAQ,IANFhD,wEAuBL,IAAAiD,EACL,OACInB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,GAAG,aAAN,eAEJH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAb,eAAkCJ,EAAAC,EAAAC,cAAA,SAAOC,GAAG,SAASO,KAAK,OAAOb,KAAK,YAAYS,SAAUjC,KAAKiB,YAAaiB,YAAY,gBAC1HP,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAb,YAA+BJ,EAAAC,EAAAC,cAAA,SAAOC,GAAG,SAASO,KAAK,OAAOb,KAAK,UAAUU,YAAY,UAAUD,SAAUjC,KAAKiB,eAClHU,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAb,YAA+BJ,EAAAC,EAAAC,cAAA,SAAOC,GAAG,SAASO,KAAK,OAAOb,KAAK,UAAUU,YAAY,UAAUD,SAAUjC,KAAKiB,eAClHU,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAb,SACAJ,EAAAC,EAAAC,cAAA,UAAAiB,EAAA,CAAQhB,GAAG,QAAQO,KAAK,OAAOb,KAAK,aAApC1B,OAAAyB,EAAA,EAAAzB,CAAAgD,EAAA,OAAqD,SAArDhD,OAAAyB,EAAA,EAAAzB,CAAAgD,EAAA,cAAyE,SAAzEhD,OAAAyB,EAAA,EAAAzB,CAAAgD,EAAA,WAA2F9C,KAAKiB,aAAhG6B,GACInB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQR,MAAM,gBAAd,gBACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,mBAAd,mBACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,cAAd,cACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,eAAd,eACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,iBAAd,iBACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,kBAAd,kBACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,kBAAd,qBAGRM,EAAAC,EAAAC,cAAA,UAAQS,QAAStC,KAAKyC,aAAcV,UAAU,sBAA9C,0BA9CQQ,8BCuGTQ,cAnGX,SAAAA,IAAc,IAAAlD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACVlD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,QAKJyC,aAAe,SAACC,EAAWC,EAASC,EAASC,GACzC,GAAkB,KAAdH,GAAgC,KAAZC,GAA8B,KAAZC,GAA4B,KAAVC,EACxD,OAAOnC,MAAM,8BAEb,IAAIsC,EAAY,CACZJ,QAASA,EACTK,MAAO,GACPpC,UAAW,GACXqC,aAAc,GACd1B,KAAMkB,EAAY,IAAMC,EACxBE,MAAOA,EACPpC,MAAM,GAEV0C,IAAMC,KAAK,aAAc,CAAEJ,cAAaK,KAAK,SAAAC,MAE7C5C,MAAM,oDArBAb,EAwBdiB,YAAc,SAACT,EAAYQ,GACvB,GAAmB,KAAfR,GAAmC,KAAdQ,GAAkC,eAAdA,EACzC,OAAOH,MAAM,8BAEb,IACI6C,EADOzD,OAAA0D,EAAA,EAAA1D,CAAOD,EAAKS,MAAME,SACAiD,KAAK,SAAArB,GAAC,OAAIA,EAAEZ,OAASnB,IAElDkD,EAAe1C,UAAYA,EAE3BsC,IAAMC,KAAK,QAAS,CAAEG,mBAAkBF,KAAK,SAAAC,GACzC7B,QAAQC,IAAI4B,GACZ7B,QAAQC,IAAI,SAEhBhB,MAAM,yBArCAb,EAwCdkB,SAAW,SAACV,EAAYW,GACpB,GAAmB,KAAfX,GAAmC,KAAdW,EACrB,OAAON,MAAM,8BAEb,IACI6C,EADOzD,OAAA0D,EAAA,EAAA1D,CAAOD,EAAKS,MAAME,SACAiD,KAAK,SAAArB,GAAC,OAAIA,EAAEZ,OAASnB,IAElDkD,EAAeV,MAAQ7B,EAEvBmC,IAAMC,KAAK,YAAa,CAAEG,mBAAkBF,KAAK,SAAAC,GAC7C7B,QAAQC,IAAI4B,GACZ7B,QAAQC,IAAI,SAEhBhB,MAAM,+BArDAb,EAwDdc,YAAc,SAACN,GACX,GAAmB,KAAfA,EACA,OAAOK,MAAM,8BAEb,IACI6C,EADOzD,OAAA0D,EAAA,EAAA1D,CAAOD,EAAKS,MAAME,SACAiD,KAAK,SAAArB,GAAC,OAAIA,EAAEZ,OAASnB,IAElDkD,EAAe9C,MAAO,EAEtB0C,IAAMC,KAAK,WAAY,CAAEG,mBAAkBF,KAAK,SAAAC,GAC5C7B,QAAQC,IAAI4B,GACZ7B,QAAQC,IAAI,SAEhBhB,MAAM,UAnEVb,EAAKS,MAAQ,CACTE,QAAS,IAHHX,mFA0EM,IAAA6D,EAAA1D,KAChBmD,IAAMQ,IAAI,YAAYN,KAAK,SAACO,GAExBF,EAAKpC,SAAS,CAAEd,QAASoD,EAASC,MAAQ,WACtCpC,QAAQC,IAAIkC,EAASC,2CAY7B,OACIlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiC,EAAD,CAAQtD,QAASR,KAAKM,MAAME,QAASO,SAAUf,KAAKe,SAAUD,YAAad,KAAKc,YAAaH,YAAaX,KAAKW,cAC/GgB,EAAAC,EAAAC,cAACkC,EAAD,CAAWtB,aAAczC,KAAKyC,uBA9FxBF,aCQPyB,mLAVP,OAEIrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBANUU,aC6CT0B,2BA1CX,SAAAA,EAAY1D,GAAM,IAAAV,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiE,IACdpE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmE,GAAA9D,KAAAH,KAAMO,KAQVuD,OAAQ,WACJjE,EAAKU,MAAMuD,OAAOjE,EAAKS,MAAMkB,KAAO3B,EAAKS,MAAM4D,OAASrE,EAAKS,MAAMsC,QAAU/C,EAAKU,MAAMuB,IACxFjC,EAAKU,MAAM4D,eAXGtE,EAelBuE,YAAa,SAAClD,GACT,IAAImD,EAAanD,EAAEE,OAAOC,MAC1BxB,EAAKyB,SAALxB,OAAAyB,EAAA,EAAAzB,CAAA,GAAgBoB,EAAEE,OAAOI,KAAM6C,IAC/B5C,QAAQC,IAAI7B,EAAKS,MAAMkB,OAhBxB3B,EAAKS,MAAM,CACPkB,KAAOjB,EAAM+D,OAAO9C,KAAK+C,MAAM,KAAK,GACpCL,OAAS3D,EAAM+D,OAAO9C,KAAK+C,MAAM,KAAK,GACtC3B,QAAUrC,EAAM+D,OAAO1B,SALb/C,wEAwBd,OACI8B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAAUO,QAAStC,KAAKO,MAAM4D,aAAhD,KACAxC,EAAAC,EAAAC,cAAA,MAAIC,GAAG,SAAP,QACAH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAOhB,MAAOrB,KAAKM,MAAMkB,KAAMA,KAAK,OAAOS,SAAUjC,KAAKoE,eAC/EzC,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAOhB,MAAOrB,KAAKM,MAAM4D,OAAQ1C,KAAK,SAASS,SAAUjC,KAAKoE,eACtFzC,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAOhB,MAAOrB,KAAKM,MAAMsC,QAASpB,KAAK,UAAUS,SAAUjC,KAAKoE,eACxFzC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAeO,QAAStC,KAAK8D,QAA/C,mBAjCAvB,cCwCLiC,cAtCX,SAAAA,IAAa,IAAA3E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IACT3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,QAKJmE,YAAc,WACVtE,EAAKyB,SAAS,CAACmD,WAAY5E,EAAKS,MAAMmE,YACpChD,QAAQC,IAAI7B,EAAKS,MAAMmE,YARhB5E,EAWT6E,UAAY,WAER,OADa7E,EAAKU,MAAM+D,OAAO7D,KACjBkB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,MAAM4C,IAAI,GAAGC,IAAI,gNAC5C,KAdG/E,EAgBTgF,WAAW,WACP,IAAM5B,EAAOpD,EAAKU,MAAM+D,OAAOzD,UAC/B,OAAOoC,GAAgB,KAhB3BpD,EAAKS,MAAM,CACXmE,WAAY,GAHH5E,wEAqBT,OACI8B,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WACVJ,EAAAC,EAAAC,cAAA,UAAKF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAAaO,QAAStC,KAAKmE,aAA7C,SACLxC,EAAAC,EAAAC,cAAA,UAAK7B,KAAKO,MAAM+D,OAAO9C,KAAK+C,MAAM,KAAK,IACvC5C,EAAAC,EAAAC,cAAA,UAAK7B,KAAKO,MAAM+D,OAAO9C,KAAK+C,MAAM,KAAK,IACvC5C,EAAAC,EAAAC,cAAA,UAAK7B,KAAKO,MAAM+D,OAAO1B,SACvBjB,EAAAC,EAAAC,cAAA,UAAK7B,KAAKO,MAAM+D,OAAOrB,OACvBtB,EAAAC,EAAAC,cAAA,UAAK7B,KAAKO,MAAM+D,OAAOpB,cACvBvB,EAAAC,EAAAC,cAAA,UAAK7B,KAAK6E,cACVlD,EAAAC,EAAAC,cAAA,UAAK7B,KAAK0E,aACV/C,EAAAC,EAAAC,cAAA,UAAK7B,KAAKO,MAAM+D,OAAOzB,OACtB7C,KAAKM,MAAMmE,UAAY9C,EAAAC,EAAAC,cAACiD,EAAD,CAAOX,YAAanE,KAAKmE,YAAaG,OAAQtE,KAAKO,MAAM+D,OAAQxC,GAAI9B,KAAKO,MAAMuB,GAAIgC,OAAQ9D,KAAKO,MAAMuD,SAAY,aAjCjIvB,aCiBXwC,mLAfP,OACQpD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,MACdJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,2BAbYU,aCqEbyC,cAlEX,SAAAA,IAAc,IAAAnF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IACVnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,QAOJiF,aAAe,SAAC/D,GACZrB,EAAKyB,SAALxB,OAAAyB,EAAA,EAAAzB,CAAA,GAAiBoB,EAAEE,OAAOI,KAAON,EAAEE,OAAOC,SAThCxB,EAWdiE,OAAS,SAACtC,EAAM0C,EAAQtB,EAASd,GAC7B,IAAItB,EAAOV,OAAA0D,EAAA,EAAA1D,CAAOD,EAAKS,MAAM0E,SAC7BvD,QAAQC,IAAII,GACZ,IAAIyB,EAAiB/C,EAAQiD,KAAK,SAAArB,GAAC,OAAIA,EAAE8C,MAAQpD,IAC7CqD,EAAQ3E,EAAQ4E,QAAQ7B,GAC5BA,EAAe/B,KAAOA,EAAO,IAAM0C,EACnCX,EAAeX,QAAUA,EACzBpC,EAAQ2E,GAAS5B,EAEjBJ,IAAMC,KAAK,WAAY,CAAEG,mBAAkBF,KAAK,SAAAC,GAC5C7B,QAAQC,IAAI4B,GACZ7B,QAAQC,IAAI,UApBhB7B,EAAKS,MAAQ,CACT0E,QAAS,GACTK,OAAQ,IAJFxF,mFA0BM,IAAA6D,EAAA1D,KAChBmD,IAAMQ,IAAI,YAAYN,KAAK,SAACO,GACxBnC,QAAQC,IAAIkC,EAASC,MACrBH,EAAKpC,SAAS,CAAE0D,QAASpB,EAASC,0CAIjC,IAAAyB,EAAAtF,KACL,OACI2B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAON,UAAU,cAAcP,KAAK,SAASH,MAAOrB,KAAKM,MAAM+E,OAAQpD,SAAUjC,KAAKiF,aAAc/C,YAAY,0BAC5HP,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UACdJ,EAAAC,EAAAC,cAAA,UAAQR,MAAM,QAAd,SAGJM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aAEIF,EAAAC,EAAAC,cAAC0D,EAAD,MACCvF,KAAKM,MAAM0E,QAAQ7C,IAAI,SAAAC,GACpB,GAAGA,EAAEZ,KAAKgE,SAASF,EAAKhF,MAAM+E,QAC9B,OACI1D,EAAAC,EAAAC,cAAC4D,EAAD,CAAaC,IAAKtD,EAAE8C,IAAKpD,GAAIM,EAAE8C,IAAKZ,OAAQlC,EAAG0B,OAAQwB,EAAKxB,qBAlDtEvB,aC4BPoD,mLAvBX,OACEhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACEjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,GAAG,YAAT,YACJnE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,GAAG,YAAT,YACJnE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,GAAG,cAAT,iBAIRnE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,UAAWlB,IACxCrD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,UAAWnD,IACxCpB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWlC,cAlBpCzB,aCKE4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1D,KAAK,SAAA2D,GACjCA,EAAaC","file":"static/js/main.449892bc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/actions.css'\r\n\r\nclass Update extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clientname: \"\",\r\n            ownername: \"\",\r\n            emailType: \"\", \r\n\r\n        }\r\n    }\r\n    declare=()=>{\r\n        let clientname = this.state.clientname\r\n        if(this.props.clients.sold === true){\r\n            alert(\"Already Sold\")\r\n        }else {\r\n            this.props.declareSale(clientname)\r\n        }\r\n        \r\n    }\r\n    send = () => {\r\n        let clientname = this.state.clientname\r\n        let emailType = this.state.emailType\r\n        this.props.changeEmail(clientname , emailType)\r\n    }\r\n    transfer = () => {\r\n        let clientname = this.state.clientname\r\n        let ownername = this.state.ownername\r\n        this.props.transfer(clientname, ownername)\r\n\r\n    }\r\n\r\n    inputchange = (e) => {\r\n        let inputvalue = e.target.value;\r\n        this.setState({[e.target.name]: inputvalue\r\n        })\r\n        console.log(inputvalue)\r\n    }\r\n    \r\n\r\n    render() {\r\n        let clients = this.props.clients\r\n        // console.log(clients)\r\n        return (\r\n            <div>\r\n                <p id=\"update\">Update</p>\r\n                <div>\r\n                    <p className=\"update\">Client:\r\n                      <input list=\"clients\" name=\"clientname\" className=\"input\" value={this.state.clientname} onChange={this.inputchange} placeholder=\"Clients name\" />\r\n                        <datalist id=\"clients\">\r\n                            {clients.map(c => {\r\n                                return <option value={c.name}>{c.name}</option>\r\n                            }\r\n                            )}\r\n                        </datalist>\r\n                    </p>\r\n                </div>\r\n                <p className=\"update pupdate\">Transfer ownership to\r\n                 <select id=\"ownerselect\" type=\"text\" name=\"ownername\" placeholder=\"Owner\" onChange={this.inputchange}>\r\n                        <option>Owner</option>\r\n                        <option value=\"Emily Durham\">Emily Durham</option>\r\n                        <option value=\"Janice Alvarado\">Janice Alvarado</option>\r\n                        <option value=\"Leila Howe\">Leila Howe</option>\r\n                        <option value=\"Hull Conrad\">Hull Conrad</option>\r\n                        <option value=\"Martin Massey\">Martin Massey</option>\r\n                        <option value=\"Shepherd Stone\">Shepherd Stone</option>\r\n                        <option value=\"Barton Ramirez\">Barton Ramirez</option>\r\n                    </select>\r\n                    <span onClick={this.transfer} id=\"spanTransfer\">Transfer</span>\r\n                </p>\r\n                <p className=\"update pupdate\">Send Email:\r\n                 <select id=\"emailselect\" type=\"text\" name=\"emailType\" placeholder=\"Email type\" onChange={this.inputchange}>\r\n                        <option>Email Type</option>\r\n                        <option>A</option>\r\n                        <option>B</option>\r\n                        <option>C</option>\r\n                        <option>D</option>\r\n                    </select>\r\n                    <span id=\"spanemail\" onClick={this.send}>Send</span>\r\n                </p>\r\n                <p className=\"update pupdate\">Declare sale!\r\n                <span id=\"spanDeclare\" onClick={this.declare}>Declare</span>\r\n                </p>\r\n                <hr />\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Update;","import React, { Component } from 'react';\r\nimport '../css/actions.css'\r\n\r\nclass AddClient extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName: \"\",\r\n            surName: \"\",\r\n            country: \"\", \r\n            owner : \"\" \r\n        }\r\n    }\r\n    addNewClient = () =>{\r\n        let firstName = this.state.firstName\r\n        let surName = this.state.surName\r\n        let country = this.state.country\r\n        let owner = this.state.owner\r\n        this.props.addNewClient(firstName , surName , country , owner)\r\n    }\r\n    inputchange = (e) => {\r\n        let inputvalue = e.target.value;\r\n        this.setState({[e.target.name]: inputvalue\r\n        })\r\n        console.log(inputvalue)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <p id=\"addclient\">Add Client</p>\r\n                </div>\r\n                <div>\r\n                    <p className=\"update\">First name: <input id=\"input1\" type=\"text\" name=\"firstName\" onChange={this.inputchange} placeholder=\"First Name\" /></p>\r\n                    <p className=\"update\">Surname: <input id=\"input2\" type=\"text\" name=\"surName\" placeholder=\"Surname\" onChange={this.inputchange} /></p>\r\n                    <p className=\"update\">Country: <input id=\"input3\" type=\"text\" name=\"country\" placeholder=\"Country\" onChange={this.inputchange} /></p>\r\n                    <p className=\"update\">Owner:\r\n                    <select id=\"owner\" type=\"text\" name=\"ownername\" name=\"owner\" placeholder=\"Owner\" onChange={this.inputchange}>\r\n                        <option>Owner</option>\r\n                        <option value=\"Emily Durham\">Emily Durham</option>\r\n                        <option value=\"Janice Alvarado\">Janice Alvarado</option>\r\n                        <option value=\"Leila Howe\">Leila Howe</option>\r\n                        <option value=\"Hull Conrad\">Hull Conrad</option>\r\n                        <option value=\"Martin Massey\">Martin Massey</option>\r\n                        <option value=\"Shepherd Stone\">Shepherd Stone</option>\r\n                        <option value=\"Barton Ramirez\">Barton Ramirez</option>\r\n                    </select></p>\r\n                </div>\r\n                <button onClick={this.addNewClient} className=\"buttonAddNewClient\">Add New Client</button>\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default AddClient;","import React, { Component } from 'react';\r\nimport '../css/actions.css'\r\nimport Update from './update'\r\nimport AddClient from './AddClient'\r\nimport axios from 'axios'\r\n\r\nclass actions extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: []\r\n        }\r\n    }\r\n    addNewClient = (firstName, surName, country, owner) => {\r\n        if (firstName === \"\" || surName === \"\" || country === \"\" || owner === \"\") {\r\n            return alert(\"Please insert full details\")\r\n        } else {\r\n            let NewClient = {\r\n                country: country,\r\n                email: \"\",\r\n                emailType: \"\",\r\n                firstContact: \"\",\r\n                name: firstName + \" \" + surName,\r\n                owner: owner,\r\n                sold: false\r\n            }\r\n            axios.post('/newClient', { NewClient }).then(res => {\r\n            })\r\n            alert(\"Congratulations , you just added a new client !\")\r\n        }\r\n    }\r\n    changeEmail = (clientname, emailType) => {\r\n        if (clientname === \"\" || emailType === \"\" || emailType === \"Email Type\") {\r\n            return alert(\"Please insert full details\")\r\n        } else {\r\n            let clients = [...this.state.clients]\r\n            let clientToUpdate = clients.find(c => c.name === clientname)\r\n            // let index = clients.indexOf(clientToUpdate)\r\n            clientToUpdate.emailType = emailType\r\n            // clients[index] = clientToUpdate\r\n            axios.post('/send', { clientToUpdate }).then(res => {\r\n                console.log(res);\r\n                console.log(\"hey\")\r\n            })\r\n            alert(\"Email have been sent\")\r\n        }\r\n    }\r\n    transfer = (clientname, ownername) => {\r\n        if (clientname === \"\" || ownername === \"\") {\r\n            return alert(\"Please insert full details\")\r\n        } else {\r\n            let clients = [...this.state.clients]\r\n            let clientToUpdate = clients.find(c => c.name === clientname)\r\n            // let index = clients.indexOf(clientToUpdate)\r\n            clientToUpdate.owner = ownername\r\n            // clients[index] = clientToUpdate\r\n            axios.post('/transfer', { clientToUpdate }).then(res => {\r\n                console.log(res);\r\n                console.log(\"hey\")\r\n            })\r\n            alert(\"Owner have been transfered\")\r\n        }\r\n    }\r\n    declareSale = (clientname) => {\r\n        if (clientname === \"\") {\r\n            return alert(\"Please insert full details\")\r\n        } else {\r\n            let clients = [...this.state.clients]\r\n            let clientToUpdate = clients.find(c => c.name === clientname)\r\n            // let index = clients.indexOf(clientToUpdate)\r\n            clientToUpdate.sold = true\r\n            // clients[index] = clientToUpdate\r\n            axios.post('/declare', { clientToUpdate }).then(res => {\r\n                console.log(res);\r\n                console.log(\"hey\")\r\n            })\r\n            alert(\"Sold!\")\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/actions').then((response) => {\r\n\r\n            this.setState({ clients: response.data }, function () {\r\n                console.log(response.data)\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    // tansfer = () => {\r\n    //     alert(\"hi\")\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Update clients={this.state.clients} transfer={this.transfer} changeEmail={this.changeEmail} declareSale={this.declareSale} />\r\n                <AddClient addNewClient={this.addNewClient} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default actions;","import React, { Component } from 'react';\r\nclass analytics extends Component {\r\n    \r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n              <span></span>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default analytics;","import React, { Component } from 'react';\r\nimport '../css/popup.css'\r\n\r\nclass Popup extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            name : props.client.name.split(\" \")[0], \r\n            srname : props.client.name.split(\" \")[1] ,\r\n            country : props.client.country\r\n        }\r\n    }\r\n\r\n    update =()=>{\r\n        this.props.update(this.state.name , this.state.srname , this.state.country , this.props.id )\r\n        this.props.togglePopup()\r\n    }\r\n\r\n\r\n    changeInput =(e)=>{\r\n         let inputValue = e.target.value;\r\n         this.setState({[e.target.name]:inputValue})\r\n         console.log(this.state.name)\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"popup\">\r\n                <div className=\"innerpopup\">\r\n                    <button className=\"buttonX\" onClick={this.props.togglePopup}>X</button>\r\n                    <h2 id=\"pEdit\">Edit</h2>\r\n                    <p>Name: <input type=\"text\" value={this.state.name} name=\"name\" onChange={this.changeInput}/></p>\r\n                    <p>Surname: <input type=\"text\" value={this.state.srname} name=\"srname\" onChange={this.changeInput} /></p>\r\n                    <p>Country: <input type=\"text\" value={this.state.country} name=\"country\" onChange={this.changeInput}/></p>\r\n                    <button className=\"buttonUpdate\" onClick={this.update}>Update</button>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Popup;","import React, { Component } from 'react';\r\nimport '../css/clients.css'\r\nimport Popup from './popUp'\r\n\r\nclass PrintClient extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n        showPopup : false\r\n        }\r\n    }\r\n    togglePopup = ()=>{\r\n        this.setState({showPopup: !this.state.showPopup })\r\n          console.log(this.state.showPopup)\r\n    }\r\n\r\n        checksold = () => {\r\n            const sold = this.props.client.sold\r\n            return(sold ? <img className=\"img\" alt=\"\" src=\"http://www.ella-abramov.com/wp-content/uploads/2016/02/%D7%95%D7%99-%D7%A2%D7%9D-%D7%A8%D7%A7%D7%A2-%D7%A9%D7%9C-%D7%94%D7%90%D7%AA%D7%A8-%D7%A4%D7%99%D7%90%D7%9F-%D7%92%D7%99%D7%A9%D7%97%D7%95%D7%A8.png\"/>\r\n            : \"-\")\r\n        }\r\n        checkemail=()=>{\r\n            const email= this.props.client.emailType\r\n            return(email ? email : \"-\")\r\n        }\r\n    render() {\r\n        return (\r\n            <tr className=\"clients\" >\r\n                <td ><button className=\"buttonEdit\" onClick={this.togglePopup}>Edit</button></td>\r\n                <td>{this.props.client.name.split(\" \")[0]}</td>\r\n                <td>{this.props.client.name.split(\" \")[1]}</td>\r\n                <td>{this.props.client.country}</td>\r\n                <td>{this.props.client.email}</td>\r\n                <td>{this.props.client.firstContact}</td>\r\n                <td>{this.checkemail()}</td>\r\n                <td>{this.checksold()}</td>\r\n                <td>{this.props.client.owner}</td>\r\n                {this.state.showPopup ? <Popup togglePopup={this.togglePopup} client={this.props.client} id={this.props.id} update={this.props.update}/> : null} \r\n            </tr>)\r\n\r\n    }\r\n}\r\n\r\nexport default PrintClient;\r\n","import React, { Component } from 'react';\r\nimport '../css/clients.css' \r\n\r\nclass HeaderClients extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <tr className=\"tr\">\r\n                <th></th>\r\n                <th>Name</th>\r\n                <th>Surname</th>\r\n                <th>Country</th>\r\n                <th>Email</th>\r\n                <th>First Contact</th>\r\n                <th>Email Type</th>\r\n                <th>Sold</th>\r\n                <th>Owner</th>\r\n                </tr>)\r\n    }\r\n}\r\n\r\nexport default HeaderClients;","import React, { Component } from 'react';\r\nimport '../css/clients.css'\r\nimport PrintClient from './printClient';\r\nimport HeaderClients from './Header';\r\nimport axios from 'axios'\r\nclass Clients extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            Clients: [],\r\n            search: \"\"\r\n\r\n        }\r\n    }\r\n    searchChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    update = (name, srname, country, id) => {\r\n        let clients = [...this.state.Clients]\r\n        console.log(id)\r\n        let clientToUpdate = clients.find(c => c._id === id)\r\n        let index = clients.indexOf(clientToUpdate)\r\n        clientToUpdate.name = name + \" \" + srname\r\n        clientToUpdate.country = country\r\n        clients[index] = clientToUpdate\r\n        // this.setState({ Clients: clients })\r\n        axios.post('/clients', { clientToUpdate }).then(res => {\r\n            console.log(res);\r\n            console.log(\"hey\")\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/clients').then((response) => {\r\n            console.log(response.data)\r\n            this.setState({ Clients: response.data })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" className=\"searchInput\" name=\"search\" value={this.state.search} onChange={this.searchChange} placeholder=\"search by name...    \" />\r\n                <select className=\"select\">\r\n                    <option value=\"name\">Name</option>\r\n\r\n                </select>\r\n                <hr />\r\n                <table>\r\n                    <tbody>\r\n\r\n                        <HeaderClients />\r\n                        {this.state.Clients.map(c => {\r\n                            if(c.name.includes(this.state.search))\r\n                            return (\r\n                                <PrintClient key={c._id} id={c._id} client={c} update={this.update} />)\r\n                                \r\n                        })}\r\n                        \r\n\r\n                        \r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Clients;\r\n","import React, { Component } from 'react';\nimport './css/App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport actions from './components/actions.js'\nimport analytics from './components/analytics.js'\nimport Clients from './components/clients.js'\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"navbar\">\n            <div className=\"main-links\">\n              <ul>\n              <li><Link to=\"/clients\">Clients</Link></li>\n              <li><Link to=\"/actions\">Actions</Link></li>\n              <li><Link to=\"/analytics\">Analytics</Link></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"main-routes\">\n            <Route path=\"/clients\" exact component={Clients} />\n            <Route path=\"/actions\" exact component={actions} />\n            <Route path=\"/analytics\" exact component={analytics} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}